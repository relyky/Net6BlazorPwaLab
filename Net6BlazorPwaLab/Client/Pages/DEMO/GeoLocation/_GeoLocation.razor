@page "/geolocation"
@inject GeoLocationInterop geoSvc;

<PageTitle>展示 HTML Geolocation API</PageTitle>

<MudContainer>
  <MudText Typo=Typo.h3>展示 HTML Geolocation API</MudText>
  <MudText Typo=Typo.body1>展示取得地理資訊能力。需支援HTML5以上瀏灠器。</MudText>

  <MudButton Variant=Variant.Outlined Color=Color.Primary OnClick=GetLocation>取得地理位置</MudButton>
  <MudSwitch Color=Color.Primary @bind-Checked=@f_open Label="監看地理位置 " />

  @if (f_loading)
  {
    <MudProgressLinear Color=Color.Info Indeterminate />
  }

  @if (!String.IsNullOrWhiteSpace(errMsg))
  {
    <MudAlert Severity=Severity.Error>@errMsg</MudAlert>
  }

  @if (currentPosition != null)
  {
    <MudAlert Severity=Severity.Info>
      <MudText Typo=Typo.subtitle1>地理位置</MudText>
      <MudText Typo=Typo.body2>
        <pre>@currentPosition?.ToJson()</pre>
      </MudText>
    </MudAlert>
  }

  <MudPaper Class="pa-2 my-2">
    <AsvtGeoLocationWatcher @bind-Open=@f_open Context="position">
      @if (position != null)
      {
        <p>@($"經度：{position.Coords.Longitude} 緯度：{position.Coords.Latitude} 更新時間：{position.TimestampOffset:HH:mm:ss}")</p>
      }
    </AsvtGeoLocationWatcher>
  </MudPaper>


</MudContainer>

@code {
  //## State
  bool f_open = false;
  bool f_loading = false;
  GeoLocationInterop.GeolocationPosition? currentPosition = null;
  string errMsg = string.Empty;

  async Task GetLocation(MouseEventArgs e)
  {
    try
    {
      f_loading = true;
      currentPosition = await geoSvc.GetLocationAsync();
    }
    catch (Exception ex)
    {
      errMsg = ex.Message;
    }
    finally
    {
      f_loading = false;
    }
  }
}
