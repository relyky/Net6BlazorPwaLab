@page "/camera"

<PageTitle>展示照像</PageTitle>

<MudContainer>
  <MudText Typo=Typo.h3>展示照像</MudText>
  <MudText Typo=Typo.body1>展示照像功能。需支援HTML5以上瀏灠器。</MudText>

  <MudButton Variant=Variant.Outlined Color=Color.Warning OnClick=HandleStartCamera>啟動攝影機</MudButton>
  <MudButton Variant=Variant.Filled Color=Color.Primary OnClick=HandleTakePhoto>照像</MudButton>
  <MudButton Variant=Variant.Outlined Color=Color.Warning OnClick=HandleStopCamera>停止</MudButton>

  <MudAlert Severity=Severity.Info>
    @message
  </MudAlert>

  <AsvtCameraPhoto @ref=@cameraRef OnResponse=HandleCameraResponse Style="color:var(--mud-palette-info)">
    <TakeIcon>
      <MudIcon Icon=@Icons.Filled.PhotoCamera />
    </TakeIcon>
  </AsvtCameraPhoto>

  @*  <AsvtCameraPhoto @ref=@cameraRef OnResponse=HandleCameraResponse>
    <TakeIcon>
    <MudIcon Icon=@Icons.Filled.PhotoCamera Color=Color.Info />
    </TakeIcon>
    </AsvtCameraPhoto>
  *@
  @* needed if you want to display the image when you take a photo
    <img alt="photo picture" src=@photoDataUri class="img-fluid img-thumbnail mx-auto d-block">
  *@

  @* needed if you want to display the image when you take a photo *@
  @if (!String.IsNullOrWhiteSpace(photoDataUri))
  {
    <MudText Typo=Typo.h5>取得照片</MudText>
    <MudImage Fluid Src=@photoDataUri Alt="photo picture" Class="rounded-lg mb-3" />
  }

</MudContainer>

@code {

  ///## Resource
  AsvtCameraPhoto cameraRef;

  ///## State
  string photoDataUri = string.Empty;
  string message = string.Empty;

  async Task HandleStartCamera()
  {
    await cameraRef.StartCameraAsync();
  }

  async Task HandleStopCamera()
  {
    await cameraRef.StopCameraAsync();
  }

  async Task HandleTakePhoto()
  {
    await cameraRef.TakePhotoAsync();
  }

  void HandleCameraResponse(CameraInterop.CameraResponseEvnetArgs args)
  {
    switch (args.type)
    {
      case "SUCCESS":
        message = args.message;
        StateHasChanged();
        break;
      case "STOP":
        message = args.message;
        StateHasChanged();
        break;
      case "PHOTO":
        photoDataUri = args.message;
        Task.Run(async () =>
        {
          await cameraRef.StopCameraAsync();
          StateHasChanged();
        });
        break;
      default:
        message = args.message;
        StateHasChanged();
        break;
    }
  }
}
