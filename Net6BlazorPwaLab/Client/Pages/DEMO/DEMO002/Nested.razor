@implements IDisposable
@inject StateContainer StateContainer

<MudPaper Elevation=25 Class="pa-3 ma-3">
    <MudText Typo=Typo.h4>Nested component</MudText>
    <MudText Typo=Typo.body2>
        Nested component Property: <b>@StateContainer.Property @($"({StateContainer.ChangedCount})")</b>
    </MudText>
    <MudButton Variant=Variant.Outlined Color=Color.Tertiary OnClick=ChangePropertyValue>
        Change the Property from the Nested component
    </MudButton>
</MudPaper>

@code {
    protected override void OnInitialized()
    {
        StateContainer.OnChange += StateHasChanged;
    }

    private void ChangePropertyValue()
    {
        StateContainer.Property =
            $"New value set in the Nested component: {DateTime.Now}";
    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }
}