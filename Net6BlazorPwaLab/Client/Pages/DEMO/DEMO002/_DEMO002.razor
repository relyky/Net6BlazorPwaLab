@page "/demo002"
@implements IDisposable
@inject StateContainer StateContainer

<PageTitle>DEMO002</PageTitle>


<MudContainer>
    <MudText Typo=Typo.h3>State Container Example component</MudText>
    <MudText Typo=Typo.body1>State Container component Property: <b>@StateContainer.Property @($"({StateContainer.ChangedCount})")</b></MudText>

    <MudButton Variant=Variant.Outlined Color=Color.Primary OnClick=ChangePropertyValue>
        Change the Property from the State Container Example component
    </MudButton>

    <MudSwitch @bind-Checked=@f_showNest Color=Color.Secondary Label="Show Nest Componnet" />        
    @if (f_showNest)
    {
        <Nested />
    }

</MudContainer>


@code {
    //## State
    bool f_showNest = true;

    protected override void OnInitialized()
    {
        StateContainer.OnChange += StateHasChanged;
    }

    private void ChangePropertyValue()
    {
        StateContainer.Property = "New value set in the State " +
            $"Container Example component: {DateTime.Now}";
    }

    public void Dispose()
    {
        StateContainer.OnChange -= StateHasChanged;
    }
}